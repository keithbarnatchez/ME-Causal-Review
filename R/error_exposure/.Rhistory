rep('With error',length(x)))
pair <- rep(1:length(x),2)
df <- data.frame(y,X,type,pair)
library(ggplot2)
ggplot(df, aes(y=y,x=X,color=type,group=pair)) + geom_point() + theme_bw() +
geom_line(color='black',alpha=0.3) +
ggtitle('Attenuation bias caused by measurement error') +
geom_smooth(method='lm',group=type)
n <- 100
x <- rnorm(n)
x_meas <- x + 0.5*rnorm(n)
y <- rep(x + 0.2*rnorm(n), 2)
X <- c(x,x_meas)
type <- c(rep('True',length(x)),
rep('With error',length(x)))
pair <- rep(1:length(x),2)
df <- data.frame(y,X,type,pair)
library(ggplot2)
ggplot(df, aes(y=y,x=X,color=type,group=pair)) + geom_point() + theme_bw() +
geom_line(color='black',alpha=0.3) +
ggtitle('Attenuation bias caused by measurement error') +
geom_smooth(method='lm',aes(x=X,y=y,group=type))
n <- 100
x <- rnorm(n)
x_meas <- x + 0.75*rnorm(n)
y <- rep(x + 0.2*rnorm(n), 2)
X <- c(x,x_meas)
type <- c(rep('True',length(x)),
rep('With error',length(x)))
pair <- rep(1:length(x),2)
df <- data.frame(y,X,type,pair)
library(ggplot2)
ggplot(df, aes(y=y,x=X,color=type,group=pair)) + geom_point() + theme_bw() +
geom_line(color='black',alpha=0.3) +
ggtitle('Attenuation bias caused by measurement error') +
geom_smooth(method='lm',aes(x=X,y=y,group=type),se=F)
n <- 100
x <- rnorm(n)
x_meas <- x + 0.75*rnorm(n)
y <- rep(x + 0.2*rnorm(n), 2)
X <- c(x,x_meas)
type <- c(rep('True',length(x)),
rep('With error',length(x)))
pair <- rep(1:length(x),2)
df <- data.frame(y,X,type,pair)
library(ggplot2)
ggplot(df, aes(y=y,x=X,color=type,group=pair)) + geom_point() + theme_bw() +
geom_line(color='black',alpha=0.3) +
ggtitle('Attenuation bias caused by measurement error') +
geom_smooth(method='lm',aes(x=X,y=y,group=type),se=F) +
labels(color='Measurement')
n <- 100
x <- rnorm(n)
x_meas <- x + 0.75*rnorm(n)
y <- rep(x + 0.2*rnorm(n), 2)
X <- c(x,x_meas)
type <- c(rep('True',length(x)),
rep('With error',length(x)))
pair <- rep(1:length(x),2)
df <- data.frame(y,X,type,pair)
library(ggplot2)
ggplot(df, aes(y=y,x=X,color=type,group=pair)) + geom_point() + theme_bw() +
geom_line(color='black',alpha=0.3) +
ggtitle('Attenuation bias caused by measurement error') +
geom_smooth(method='lm',aes(x=X,y=y,group=type),se=F) +
labs(color='Measurement')
1e8 * 0.003
1e6 * 0.003
norm(matrix(rnorm(25),nrow=5))
norm(matrix(rnorm(25),nrow=5))
norm(matrix(rnorm(25),nrow=5))
norm(matrix(rnorm(25),nrow=5))
norm(matrix(rnorm(25),nrow=5))
cond(matrix(rnorm(25),nrow=5))
kappa(matrix(rnorm(25),nrow=5))
A =(matrix(rnorm(25),nrow=5))
A
norm(A,type='2')
norm(A)
norm(A,type='2')/norm(inv(A),type='2')
norm(A,type='2')/norm(solve(A),type='2')
kappa(A)
knitr::opts_chunk$set(echo = TRUE)
matrix(1,nrow=2,col=3)
matrix(1,nrow=2,ncol=3)
methods(kappa)
?methods
methods(kappa)
getAnywhere('kappa.default')
help(svd)
svd(matrix(rnorm(9),nrow=3))
A
kappa(A,norm = '2')
kappa(A)
kappa(A,norm='1')
kappa(A,norm='3')
kappa(A,norm='I')
norm()
norm(A)
solve(A)
solve(A)*A
solve(A)%*%A
norm(A,type = 'I')
norm(solve(A),type = 'I')
norm(A,type = 'I')/norm(solve(A),type = 'I')
kappa(A,norm='I')
norm(A,type = 'I')*norm(solve(A),type = 'I')
solve(A)
kappa(A)
A <- matrix(c(
5, 7, 7, ,7,
10,1,8,2,
8,9,8,8,
10,10,4,1),
nrow=4,byrow = F)
A <- matrix(c( 5, 7, 7, ,7,
10,1,8,2,
8,9,8,8,
10,10,4,1),
nrow=4,byrow = F)
c(1,2,3)
A <- matrix(c(5, 7, 7,7,
10,1,8,2,
8,9,8,8,
10,10,4,1),
nrow=4,byrow = F)
A
A <- matrix(c(5, 7, 7,7,
10,1,8,2,
8,9,8,8,
10,10,4,1),
nrow=4,byrow = T)
A
kappa(A,'1')
A
kappa(A)
kappa(A,type='1')
kappa(A,type='1',exact=TRUE)
kappa(A,type='2',exact=TRUE)
kappa(A,exact=TRUE)
kappa(A,exact=TRUE)*kappa(solve(A),exact=TRUE)
kappa(A)
kappa(solve(A))
kappa(solve(A),exact=TRUE)
norm(solve(A),exact=TRUE)
norm(A)
norm(A)*norm(solve(A))
norm(A,type='2')
norm(solve(A),type='2')
norm(solve(A),type='2')*norm(solve(A),type='2')
norm(A,type='2')*norm(solve(A),type='2')
kappa(A)
kappa(A,exact=TRUE)
t(A)%*%A
eig(t(A)%*%A)
eigen(t(A)%*%A)
eigen(t(A)%*%A)$values
max(eigen(t(A)%*%A)$values)
sqrt(max(eigen(t(A)%*%A)$values))
norm(A,type='2')
A1 <- matrix( c(2,1,1
1,2,1
A1 <- matrix( c(2,1,1,
1,2,1,
1,1,2),byrow=T,nrow=3  )
lam1 <- max(eigen(t(A1)%*%A1))
lam1 <- max(eigen(t(A1)%*%A1)$values)
lam1 <- max(eigen(t(A1)%*%A1)$values)
lam1 <- max(eigen(t(A2)%*%A2)$values)
A1 <- matrix( c(2,1,1,
1,2,1,
1,1,2),byrow=T,nrow=3  )
A2 <- matrix( c(168,113,
113,76), byrow = T, nrow=2)
lam1 <- max(eigen(t(A1)%*%A1)$values) ; lam1
lam1 <- max(eigen(t(A2)%*%A2)$values) ; lam2
A1 <- matrix( c(2,1,1,
1,2,1,
1,1,2),byrow=T,nrow=3  )
A2 <- matrix( c(168,113,
113,76), byrow = T, nrow=2)
lam1 <- max(eigen(t(A1)%*%A1)$values) ; lam1
lam2 <- max(eigen(t(A2)%*%A2)$values) ; lam2
paste(1,2)
A
max(eigen(A)$values)
(eigen(A)$values)
A = matrix(rnorm(9),nrow=3)
A
max(eigen(A)$values)
(eigen(A)$values)
A
solve(A)
eigen(A)
A = matrix(rnorm(9),nrow=3)
eigen(A)
eigen(A)
eigen(A)
A = matrix(rnorm(9),nrow=3)
eigen(A)
lam = max(eigen(A)$values)
lam
norm(A,type='1')
norm(A,type='2')
lam = sqrt(max(eigen(A)$values))
lam
norm(A,type='2')
norm(A,exact=)
norm(A,exact=T)
norm(A,type='2')
10545*(1-0.1442)
10545 - 10545*(1-0.1442)
10545*0.1025
10545*0.0417
A2
kappa(A2)
kappa(A2,norm = '2')
kappa(A1,norm = '2')
norm(A,exact=T)
kappa(A1,exact = T)
kappa(A2,exact = T)
eigen(A2)
A2
kappa(A2)
kappa(A2,norm='2')
eigen(solve(A2))
max(eigen(solve(A2)))*max(eigen(A2))
max(eigen(solve(A2))$values)*max(eigen(A2)$values)
norm(A2)
norm(A2,type='2')
norm(A2,type='2')
norm(A2,type='2')
eigen(A2)
eigen(solve(A2))
A2
eigen(A1)
A
A1
eigen(t(A2)*A2)
sqrt(eigen(t(A2)*A2))
sqrt(max( eigen(t(A2)*A2)$values )
)
norm(A2,type='2')
norm(A2,type='F')
norm(A2,type='I')
A2
A1
A2[1,1]=169
norm(A2,type='I')
kappa(A1)
kappa(A1,norm = "I")
solve(A1)
rowSum(solve(A1))
rowSums(solve(A1))
A <- matrix( c(4,12,-16,)  )
A <- matrix(c(0,3,-2,
4,-2,1,
2,-1,1),
nrow=4,byrow = T)
A%*%c(1,11,17)
A%*%c(1,11,17)
A <- matrix(c(0,3,-2,
4,-2,1,
2,-1,1),
nrow=3,byrow = T)
A%*%c(1,11,17)
getwd()
.0294*.0294
qnorm(1)
qnorm(.5)
pnorm(.5)
pnorm(0)
pnorm(2.413)
pnorm(2.413)*2
1-pnorm(2.413)
1-pnorm(2.413)/2
1-pnorm(2.413)
1-pnorm(2.413)
pnorm(2.413)
1 - (1-pnorm(2.413))/2
(1-pnorm(2.413))/2
(1-pnorm(2.413)
)
pnorm(-2.413)
qnorm(.0158)
qnorm(.0294)
qnorm(.000198)
qnorm(.00019)
qnorm(.0294/2)
qnorm(.0158/2)
qnorm(0.025)
knitr::opts_chunk$set(echo = TRUE)
library(mvtnorm)
lowers <- c(-1.96*sqrt(4/N),-1.96*sqrt(2/N))
N <- 100
sigma
mu <- c(0,0)
Sigma <- matrix(c(4/N, 2/N,
2/N, 2/N))
crit_val <- 1.96
lowers <- c(-1.96*sqrt(4/N),-1.96*sqrt(2/N))
uppers <- abs(lowers)
N <- 100
sigma
mu <- c(0,0)
Sigma <- matrix(c(4/N, 2/N,
2/N, 2/N))
crit_val <- 1.96
lowers <- c(-1.96*sqrt(4/N),-1.96*sqrt(2/N))
uppers <- abs(lowers)
pmvnorm(mean=mu,sigma=Sigma,lower=lowers,uppers=uppers)
sigmas
Sigma
Sigma <- matrix(c(4/N, 2/N,
2/N, 2/N),nrow=2,byrow=T)
Sigma
N <- 100
sigma
mu <- c(0,0)
Sigma <- matrix(c(4/N, 2/N,
2/N, 2/N),nrow=2,byrow=T)
crit_val <- 1.96
lowers <- c(-1.96*sqrt(4/N),-1.96*sqrt(2/N))
uppers <- abs(lowers)
pmvnorm(mean=mu,sigma=Sigma,lower=lowers,uppers=uppers)
pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
N <- 1000
sigma
mu <- c(0,0)
Sigma <- matrix(c(4/N, 2/N,
2/N, 2/N),nrow=2,byrow=T)
crit_val <- 1.96
lowers <- c(-1.96*sqrt(4/N),-1.96*sqrt(2/N))
uppers <- abs(lowers)
pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
N <- 1000
sigma
mu <- c(0,0)
Sigma <- matrix(c(4/N, 2/N,
2/N, 2/N),nrow=2,byrow=T)
crit_val <- 2.178
lowers <- c(-crit_val*sqrt(4/N),-crit_val*sqrt(2/N))
uppers <- abs(lowers)
pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
# Testing pocock
crit_val <- c(2.782,1.967)
lowers <- c(-crit_val[1]*sqrt(4/N),-crit_val[2]*sqrt(2/N))
uppers <- abs(lowers)
# Compute the probability
pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
# Compute the probability
1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
# Compute the probability
1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
# Compute the probability
1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
# Testing pocock
crit_val <- c(2.782,1.967)
lowers <- c(-crit_val[1]*sqrt(4/N),-crit_val[2]*sqrt(2/N))
uppers <- abs(lowers)
# Compute the probability
1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
# Testing pocock
crit_val <- c(2.782,1.967)
lowers <- c(-crit_val[1]*sqrt(4/N),-crit_val[2]*sqrt(2/N))
uppers <- abs(lowers)
# Compute the probability
1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
# Testing pocock
crit_val <- 2.178
lowers <- c(-crit_val*sqrt(4/N),-crit_val*sqrt(2/N))
uppers <- abs(lowers)
# Compute the probability
1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
Sigma <- 2 * matrix(c( 1/(N/5), 1/(2*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(2*N/5), 1/(2*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(3*N/5), 1/(3*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(4*N/5), 1/(4*N/5), 1/(4*N/5), 1/(4*N/5), 1/(N),
1/(N),     1/(N),     1/(N),     1/(N),     1/(N)),
nrow=2,byrow=T)
Sigma <- 2 * matrix(c( 1/(N/5), 1/(2*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(2*N/5), 1/(2*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(3*N/5), 1/(3*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(4*N/5), 1/(4*N/5), 1/(4*N/5), 1/(4*N/5), 1/(N),
1/(N),     1/(N),     1/(N),     1/(N),     1/(N)),
nrow=5,byrow=T)
Sigma
N <- 1000 # N is arbitrary since null is true
sigma
mu <- c(0,0,0,0,0)
Sigma <- 2 * matrix(c( 1/(N/5), 1/(2*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(2*N/5), 1/(2*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(3*N/5), 1/(3*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(4*N/5), 1/(4*N/5), 1/(4*N/5), 1/(4*N/5), 1/(N),
1/(N),     1/(N),     1/(N),     1/(N),     1/(N)),
nrow=5,byrow=T)
N <- 1000 # N is arbitrary since null is true
sigma
mu <- c(0,0,0,0,0)
Sigma <- 2 * matrix(c( 1/(N/5), 1/(2*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(2*N/5), 1/(2*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(3*N/5), 1/(3*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(4*N/5), 1/(4*N/5), 1/(4*N/5), 1/(4*N/5), 1/(N),
1/(N),     1/(N),     1/(N),     1/(N),     1/(N)),
nrow=5,byrow=T)
N <- 1000 # N is arbitrary since null is true
mu <- c(0,0,0,0,0)
Sigma <- 2 * matrix(c( 1/(N/5), 1/(2*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(2*N/5), 1/(2*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(3*N/5), 1/(3*N/5), 1/(3*N/5), 1/(4*N/5), 1/(N),
1/(4*N/5), 1/(4*N/5), 1/(4*N/5), 1/(4*N/5), 1/(N),
1/(N),     1/(N),     1/(N),     1/(N),     1/(N)),
nrow=5,byrow=T)
sigma
crit_val <- 2.413
lowers <- c(-crit_val*sqrt(2/(N/5)),
-crit_val*sqrt(2/(2*N/5)),
-crit_val*sqrt(2/(3*N/5)),
-crit_val*sqrt(2/(4*N/5)),
-crit_val*sqrt(2/N)) # lower bounds for each look
uppers <- abs(lowers) # upper bounds
# Compute the probability
1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
crit_val <- c(4.555,3.221,2.630,2.277,2.037)
lowers <- c(-crit_val[1]*sqrt(2/(N/5)),
-crit_val[2]*sqrt(2/(2*N/5)),
-crit_val[3]*sqrt(2/(3*N/5)),
-crit_val[4]*sqrt(2/(4*N/5)),
-crit_val[5]*sqrt(2/N)) # lower bounds for each look
uppers <- abs(lowers) # upper bounds
# Compute the probability
1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
crit_val <- c(4.555,3.221,2.630,2.277,2.037)
lowers <- c(-crit_val[1]*sqrt(2/(N/5)),
-crit_val[2]*sqrt(2/(2*N/5)),
-crit_val[3]*sqrt(2/(3*N/5)),
-crit_val[4]*sqrt(2/(4*N/5)),
-crit_val[5]*sqrt(2/N)) # lower bounds for each look
uppers <- abs(lowers) # upper bounds
# Compute the probability
ofyes = 1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
crit_val <- c(4.555,3.221,2.630,2.277,2.037)
lowers <- c(-crit_val[1]*sqrt(2/(N/5)),
-crit_val[2]*sqrt(2/(2*N/5)),
-crit_val[3]*sqrt(2/(3*N/5)),
-crit_val[4]*sqrt(2/(4*N/5)),
-crit_val[5]*sqrt(2/N)) # lower bounds for each look
uppers <- abs(lowers) # upper bounds
# Compute the probability
ofyes = 1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
ofyes
ofyes
as.double(ofyes)
OB_results = 1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
print(as.double(OB_results))
OB_results = 1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
print(as.double(OB_results))
OB_results = 1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
print(as.double(OB_results))
OB_results = 1 - pmvnorm(mean=mu,sigma=Sigma,lower=lowers,upper=uppers)
print(as.double(OB_results))
pnorm(-2.96)
qnorm(-2.96)
pnorm(-2.96)
pnorm(-2.96/2)
pnorm(-2.96)
pnorm(-2.96)*2
pnorm(0.198)
pnorm(0.198)-pnorm(-0.198)
pnorm(-0.198)*2
2*pnorm(-1.969)
662/.9
pnorm(0.75)
pnorm(0.25)
qnorm(.25)
1.96 - qnorm(.25)
(1.96 - qnorm(.25))**2
### Test RC/DR estimator
rm(list = ls())
## Preliminaries
library(ranger)
library(earth)
library(glmnet)
library(SuperLearner)
library(parallel)
library(abind)
getwd()
setwd("~/Documents/research/ME-Causal-Review/R/error_exposure")
source("gen_data.R")
source("erf.R")
source("rc.R")
# simulation arguments
n.sim <- 100 # number of simulations
omega <- 1 # outcome sd
sigma <- sqrt(2) # exposure sd
tau <- 1 # error sd
mult <- 5 # for replication - the average number of replicate measurements
prob <- 0.1 # for validation - proportion of data where A is observed
n <- 800 # sample size divisible by 8
bw <- 0.5 # bandwidth
# model arguments
a.vals <- seq(6, 14, by = 0.02)
sl.lib <- c("SL.mean", "SL.glm", "SL.glm.interaction",
"SL.glmnet", "SL.gam", "SL.ranger") # SuperLearner Libraries
dat_rep <- gen_data(n = n, omega = omega, sigma = sigma, tau = tau, type = "replicate", mult = mult)
View(dat_rep)
y <- dat_rep$y
x <- dat_rep$x
s <- dat_rep$s
s.id <- dat_rep$s.id
x.id <- dat_rep$x.id
require(piss)
